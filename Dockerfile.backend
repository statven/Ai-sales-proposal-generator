# Dockerfile.backend
FROM python:3.11-slim

ENV PYTHONUNBUFFERED=1
ENV APP_HOME=/app
WORKDIR $APP_HOME

# Установим системные зависимости, нужные для docx/plotly/kaleido/requests и т.д.
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    liblzma-dev \
    libxml2-dev \
    libxslt1-dev \
    libffi-dev \
    libssl-dev \
    libjpeg-dev \
    zlib1g-dev \
    && rm -rf /var/lib/apt/lists/*

# Копируем зависимости и ставим (если у тебя один файл requirements.txt — оставь его)
COPY backend/requirements.txt ./requirements-backend.txt
RUN pip install --no-cache-dir -r ./requirements-backend.txt

# Копируем весь backend в контейнер
COPY backend/ ./backend/

# Копируем шаблон, если хочешь включить его в образ; в compose лучше монтировать локально
# COPY docs/template.docx ./docs/template.docx

# Установим PYTHONPATH чтобы python видел пакет backend
ENV PYTHONPATH=/app

# Папка для базы данных
RUN mkdir -p /data
ENV PROPOSAL_DB_PATH="/data/proposals.db"

EXPOSE 8000

# Удобный CMD для прод/локали. Для production с несколькими workers можно использовать gunicorn + uvicorn workers.
CMD ["uvicorn", "backend.app.main:app", "--host", "0.0.0.0", "--port", "8000", "--proxy-headers"]
